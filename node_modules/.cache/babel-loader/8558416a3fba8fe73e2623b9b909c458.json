{"ast":null,"code":"import axios from \"axios\";\nimport setAuthToken from \"../utills/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { GET_ERRORS, SET_CURRENT_USER, WORKER_LOADING } from \"./types\"; // Register Worker\n\nexport const registerWorker = (workerData, history) => dispatch => {\n  axios.post(\"/workers/register\", workerData).then(res => history.push(\"/worker-login\")) // re-direct to login on successful register\n  .catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Register Hirer\n\nexport const registerHirer = (hirerData, history) => dispatch => {\n  axios.post(\"/hirers/register\", hirerData).then(res => history.push(\"/hirer-login\")) // re-direct to login on successful register\n  .catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Worker Login - get user token\n\nexport const loginWorker = workerData => dispatch => {\n  axios.post(\"/workers/login\", workerData).then(res => {\n    // Save to localStorage\n    // Set token to localStorage\n    const {\n      token\n    } = res.data;\n    localStorage.setItem(\"jwtToken\", token); // Set token to Auth header\n\n    setAuthToken(token); // Decode token to get user data\n\n    const decodedW = jwt_decode(token); // Set current user\n\n    console.log(decodedW);\n    dispatch(setCurrentWorker(decodedW));\n  }).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};\nexport const setCurrentWorker = decodedW => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decodedW\n  };\n}; // Worker Login - get user token\n\nexport const loginHirer = hirerData => dispatch => {\n  axios.post(\"/hirers/login\", hirerData).then(res => {\n    // Save to localStorage\n    // Set token to localStorage\n    const {\n      token\n    } = res.data;\n    localStorage.setItem(\"jwtToken\", token); // Set token to Auth header\n\n    setAuthToken(token); // Decode token to get user data\n\n    const decodedH = jwt_decode(token); // Set current user\n\n    dispatch(setCurrentHirer(decodedH));\n  }).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Set logged in user\n\nexport const setCurrentHirer = decodedH => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decodedH\n  };\n}; // User loading\n\nexport const setUWorkerLoading = () => {\n  return {\n    type: WORKER_LOADING\n  };\n}; // Log worker out\n\nexport const logoutWorker = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\"); // Remove auth header for future requests\n\n  setAuthToken(false); // Set current user to empty object {} which will set isAuthenticated to false\n\n  dispatch(setCurrentWorker({}));\n}; // Log hirer out\n\nexport const logoutHirer = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\"); // Remove auth header for future requests\n\n  setAuthToken(false); // Set current user to empty object {} which will set isAuthenticated to false\n\n  dispatch(setCurrentHirer({}));\n};","map":{"version":3,"sources":["F:/Programming/niwahana/src/actions/authActions.js"],"names":["axios","setAuthToken","jwt_decode","GET_ERRORS","SET_CURRENT_USER","WORKER_LOADING","registerWorker","workerData","history","dispatch","post","then","res","push","catch","err","type","payload","response","data","registerHirer","hirerData","loginWorker","token","localStorage","setItem","decodedW","console","log","setCurrentWorker","loginHirer","decodedH","setCurrentHirer","setUWorkerLoading","logoutWorker","removeItem","logoutHirer"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport setAuthToken from \"../utills/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { GET_ERRORS, SET_CURRENT_USER, WORKER_LOADING } from \"./types\";\r\n// Register Worker\r\nexport const registerWorker = (workerData, history) => (dispatch) => {\r\n  axios\r\n    .post(\"/workers/register\", workerData)\r\n    .then((res) => history.push(\"/worker-login\")) // re-direct to login on successful register\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\n// Register Hirer\r\nexport const registerHirer = (hirerData, history) => (dispatch) => {\r\n  axios\r\n    .post(\"/hirers/register\", hirerData)\r\n    .then((res) => history.push(\"/hirer-login\")) // re-direct to login on successful register\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\n// Worker Login - get user token\r\nexport const loginWorker = (workerData) => (dispatch) => {\r\n  axios\r\n    .post(\"/workers/login\", workerData)\r\n    .then((res) => {\r\n      // Save to localStorage\r\n      // Set token to localStorage\r\n      const { token } = res.data;\r\n\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decodedW = jwt_decode(token);\r\n      // Set current user\r\n      console.log(decodedW);\r\n      dispatch(setCurrentWorker(decodedW));\r\n    })\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\nexport const setCurrentWorker = (decodedW) => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decodedW,\r\n  };\r\n};\r\n\r\n// Worker Login - get user token\r\nexport const loginHirer = (hirerData) => (dispatch) => {\r\n  axios\r\n    .post(\"/hirers/login\", hirerData)\r\n    .then((res) => {\r\n      // Save to localStorage\r\n      // Set token to localStorage\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decodedH = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentHirer(decodedH));\r\n    })\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentHirer = (decodedH) => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decodedH,\r\n  };\r\n};\r\n// User loading\r\nexport const setUWorkerLoading = () => {\r\n  return {\r\n    type: WORKER_LOADING,\r\n  };\r\n};\r\n// Log worker out\r\nexport const logoutWorker = () => (dispatch) => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentWorker({}));\r\n};\r\n\r\n// Log hirer out\r\nexport const logoutHirer = () => (dispatch) => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentHirer({}));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}