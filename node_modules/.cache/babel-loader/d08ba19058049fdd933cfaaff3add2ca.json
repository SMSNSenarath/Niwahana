{"ast":null,"code":"var _jsxFileName = \"F:\\\\Programming\\\\niwahana\\\\src\\\\Login\\\\HirerLogin.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginHirer } from \"../actions/authActions\";\nimport classnames from \"classnames\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport \"./Login.css\";\n\nclass HirerLogin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {},\n      modalIsOpen: false\n    };\n\n    this.toggleModal = () => {\n      this.setState({\n        modalIsOpen: !this.state.modalIsOpen\n      });\n    };\n\n    this.redirectToWorker = () => {\n      window.location = \"/worker-register\";\n    };\n\n    this.redirectToHirer = () => {\n      window.location = \"/hirer-register\";\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const hirerData = {\n        phone: this.state.phone,\n        password: this.state.password\n      };\n      console.log(hirerData);\n      this.props.loginHirer(hirerData); //\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/hirer-dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/hirer-dashboard\"); // push user to dashboard when they login\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"login-form-inner\",\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"logo.png\",\n      style: {\n        width: \"200px\",\n        height: \"auto\"\n      },\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      style: {\n        marginBottom: \"30px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Login as a Worker\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: classnames(\"form-control shadow\", {\n        invalid: errors.phone || errors.phonenotfound\n      }),\n      type: \"text\",\n      id: \"phone\",\n      error: errors.phone,\n      placeholder: \"Mobile Number\",\n      onChange: this.onChange,\n      value: this.state.phone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, errors.phone, errors.phonenotfound)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: classnames(\"form-control shadow\", {\n        invalid: errors.password || errors.passwordincorrect\n      }),\n      type: \"password\",\n      id: \"password\",\n      error: errors.password,\n      placeholder: \"Password\",\n      onChange: this.onChange,\n      value: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, errors.password, errors.passwordincorrect)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary login-button shadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Login\")), React.createElement(\"a\", {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Forgot Password?\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      href: \"/\",\n      className: \"btn btn-link\",\n      onClick: this.toggleModal.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Create an Account?\"))), React.createElement(Modal, {\n      isOpen: this.state.modalIsOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggleModal.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"How do you want to sign up as?\"), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.redirectToHirer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Sign as Hirer\"), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.redirectToWorker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Sign as Worker\")))));\n  }\n\n}\n\nHirerLogin.propTypes = {\n  loginHirer: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loginHirer\n})(HirerLogin);","map":{"version":3,"sources":["F:/Programming/niwahana/src/Login/HirerLogin.js"],"names":["React","Component","PropTypes","connect","loginHirer","classnames","Modal","ModalHeader","ModalBody","ModalFooter","HirerLogin","state","email","password","errors","modalIsOpen","toggleModal","setState","redirectToWorker","window","location","redirectToHirer","onChange","e","target","id","value","onSubmit","preventDefault","hirerData","phone","console","log","props","componentDidMount","auth","isAuthenticated","history","push","componentWillReceiveProps","nextProps","render","width","height","marginBottom","invalid","phonenotfound","passwordincorrect","bind","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginHirer } from \"../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport \"./Login.css\";\r\n\r\nclass HirerLogin extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    errors: {},\r\n    modalIsOpen: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Login page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/hirer-dashboard\");\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/hirer-dashboard\"); // push user to dashboard when they login\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      modalIsOpen: !this.state.modalIsOpen,\r\n    });\r\n  };\r\n\r\n  redirectToWorker = () => {\r\n    window.location = \"/worker-register\";\r\n  };\r\n  redirectToHirer = () => {\r\n    window.location = \"/hirer-register\";\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const hirerData = {\r\n      phone: this.state.phone,\r\n      password: this.state.password,\r\n    };\r\n    console.log(hirerData);\r\n\r\n    this.props.loginHirer(hirerData); //\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"login-form\">\r\n            <form className=\"login-form-inner\" onSubmit={this.onSubmit}>\r\n              <img\r\n                src=\"logo.png\"\r\n                style={{ width: \"200px\", height: \"auto\" }}\r\n                alt=\"\"\r\n              />\r\n              <h1 style={{ marginBottom: \"30px\" }}>Login as a Worker</h1>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  className={classnames(\"form-control shadow\", {\r\n                    invalid: errors.phone || errors.phonenotfound,\r\n                  })}\r\n                  type=\"text\"\r\n                  id=\"phone\"\r\n                  error={errors.phone}\r\n                  placeholder=\"Mobile Number\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.phone}\r\n                />\r\n                <span className=\"red-text\">\r\n                  {errors.phone}\r\n                  {errors.phonenotfound}\r\n                </span>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  className={classnames(\"form-control shadow\", {\r\n                    invalid: errors.password || errors.passwordincorrect,\r\n                  })}\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  error={errors.password}\r\n                  placeholder=\"Password\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.password}\r\n                />\r\n                <span className=\"red-text\">\r\n                  {errors.password}\r\n                  {errors.passwordincorrect}\r\n                </span>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <button className=\"btn btn-primary login-button shadow\">\r\n                  Login\r\n                </button>\r\n              </div>\r\n              <a href=\"/\">Forgot Password?</a>\r\n            </form>\r\n          </div>\r\n          <div>\r\n            <button\r\n              href=\"/\"\r\n              className=\"btn btn-link\"\r\n              onClick={this.toggleModal.bind(this)}\r\n            >\r\n              <h3>Create an Account?</h3>\r\n            </button>\r\n          </div>\r\n          <Modal isOpen={this.state.modalIsOpen}>\r\n            <ModalHeader toggle={this.toggleModal.bind(this)}>\r\n              Sign Up\r\n            </ModalHeader>\r\n            <ModalBody>How do you want to sign up as?</ModalBody>\r\n            <ModalFooter>\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={this.redirectToHirer}\r\n              >\r\n                Sign as Hirer\r\n              </button>\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={this.redirectToWorker}\r\n              >\r\n                Sign as Worker\r\n              </button>\r\n            </ModalFooter>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHirerLogin.propTypes = {\r\n  loginHirer: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n});\r\nexport default connect(mapStateToProps, { loginHirer })(HirerLogin);\r\n"]},"metadata":{},"sourceType":"module"}