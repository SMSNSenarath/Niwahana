{"ast":null,"code":"var _jsxFileName = \"F:\\\\Programming\\\\niwahana\\\\src\\\\elements\\\\Work\\\\Work.js\";\nimport React, { Component } from \"react\"; // import { Link } from \"react-router-dom\";\n\nimport axios from \"axios\";\n\nclass Work extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      works: [],\n      worker: []\n    };\n\n    this.renderWorks = works => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, works.map((work, index) => {\n        // const posterId = work.postedBy ? work.postedBy._id : \"No Id\";\n        const posterName = work.postedBy ? work.postedBy.name : \"\";\n        const posterPhone = work.postedBy ? work.postedBy.phone : \"\"; // <p>{new Date(work.created).toDateString()}</p>;\n        // const posterProfPic = work.postedBy\n        //   ? work.postedBy.profilePicture\n        //   : \"\";\n\n        return React.createElement(\"div\", {\n          className: \"card\",\n          style: {\n            textAlign: \"left\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"card-img-top\",\n          src: work.images[0],\n          alt: \"Card image cap\",\n          width: \"50px\",\n          height: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"card-img-top\",\n          src: \"...\",\n          alt: \"Card image cap\",\n          width: \"30%\",\n          height: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"card-img-top\",\n          src: \"...\",\n          alt: \"Card image cap\",\n          width: \"30%\",\n          height: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"card-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          className: \"card-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, work.title), React.createElement(\"p\", {\n          className: \"card-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\")), React.createElement(\"ul\", {\n          className: \"list-group list-group-flush\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"Cras justo odio\"), React.createElement(\"li\", {\n          className: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"Dapibus ac facilisis in\"), React.createElement(\"li\", {\n          className: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, \"Vestibulum at eros\")), React.createElement(\"div\", {\n          className: \"card-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"/hirer-dashboard\",\n          className: \"card-link\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Card link\"), React.createElement(\"a\", {\n          href: \"/hirer-dashboard\",\n          className: \"card-link\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, \"Another link\")));\n      }));\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"/works\").then(response => {\n      if (response.data.length > 0) {\n        console.log(response.data);\n        this.setState({\n          works: response.data\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      works\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.renderWorks(works));\n  }\n\n}\n\nexport default Work;","map":{"version":3,"sources":["F:/Programming/niwahana/src/elements/Work/Work.js"],"names":["React","Component","axios","Work","state","works","worker","renderWorks","map","work","index","posterName","postedBy","name","posterPhone","phone","textAlign","images","title","componentDidMount","get","then","response","data","length","console","log","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nclass Work extends Component {\r\n  state = {\r\n    works: [],\r\n    worker: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios.get(\"/works\").then((response) => {\r\n      if (response.data.length > 0) {\r\n        console.log(response.data);\r\n        this.setState({\r\n          works: response.data,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  renderWorks = (works) => {\r\n    return (\r\n      <div>\r\n        {works.map((work, index) => {\r\n          // const posterId = work.postedBy ? work.postedBy._id : \"No Id\";\r\n          const posterName = work.postedBy ? work.postedBy.name : \"\";\r\n          const posterPhone = work.postedBy ? work.postedBy.phone : \"\";\r\n          // <p>{new Date(work.created).toDateString()}</p>;\r\n          // const posterProfPic = work.postedBy\r\n          //   ? work.postedBy.profilePicture\r\n          //   : \"\";\r\n\r\n          return (\r\n            <div className=\"card\" style={{ textAlign: \"left\" }}>\r\n              <div>\r\n                <span>\r\n                  <img\r\n                    className=\"card-img-top\"\r\n                    src={work.images[0]}\r\n                    alt=\"Card image cap\"\r\n                    width=\"50px\"\r\n                    height=\"\"\r\n                  />\r\n                </span>\r\n                <span>\r\n                  <img\r\n                    className=\"card-img-top\"\r\n                    src=\"...\"\r\n                    alt=\"Card image cap\"\r\n                    width=\"30%\"\r\n                    height=\"\"\r\n                  />\r\n                </span>\r\n                <span>\r\n                  <img\r\n                    className=\"card-img-top\"\r\n                    src=\"...\"\r\n                    alt=\"Card image cap\"\r\n                    width=\"30%\"\r\n                    height=\"\"\r\n                  />\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{work.title}</h5>\r\n                <p className=\"card-text\">\r\n                  Some quick example text to build on the card title and make up\r\n                  the bulk of the card's content.\r\n                </p>\r\n              </div>\r\n              <ul className=\"list-group list-group-flush\">\r\n                <li className=\"list-group-item\">Cras justo odio</li>\r\n                <li className=\"list-group-item\">Dapibus ac facilisis in</li>\r\n                <li className=\"list-group-item\">Vestibulum at eros</li>\r\n              </ul>\r\n              <div className=\"card-body\">\r\n                <a href=\"/hirer-dashboard\" className=\"card-link\">\r\n                  Card link\r\n                </a>\r\n                <a href=\"/hirer-dashboard\" className=\"card-link\">\r\n                  Another link\r\n                </a>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { works } = this.state;\r\n\r\n    return <div className=\"container\">{this.renderWorks(works)}</div>;\r\n  }\r\n}\r\nexport default Work;\r\n"]},"metadata":{},"sourceType":"module"}