{"ast":null,"code":"var _jsxFileName = \"F:\\\\Programming\\\\niwahana\\\\src\\\\App\\\\App.js\";\nimport React from \"react\";\nimport Login from \"../Home/Home\";\nimport HirerRegister from \"../Register/HirerRegister\";\nimport HirerLogin from \"../Login/HirerLogin\";\nimport WorkerRegister from \"../Register/WorkerRegister\";\nimport WorkerLogin from \"../Login/WorkerLogin\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"../store\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"../utills/setAuthToken\";\nimport { setCurrentUser, logoutWorker, logoutHirer } from \"../actions/authActions\";\nimport PrivateRoute from \"../private-route/PrivateRoute\";\nimport WorkerDashboard from \"../Dashboards/WorkerDashboard\"; // Check for token to keep user logged in\n\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token); // Decode token and get user info and exp\n\n  const decoded = jwt_decode(token); // Set user and isAuthenticated\n\n  store.dispatch(setCurrentUser(decoded)); // Check for expired token\n\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutWorker()); // Redirect to login\n\n    window.location.href = \"/\";\n  }\n}\n\nfunction App() {\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    component: Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/worker-register\",\n    exact: true,\n    component: WorkerRegister,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/hirer-register\",\n    exact: true,\n    component: HirerRegister,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/worker-login\",\n    exact: true,\n    component: WorkerLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/hirer-login\",\n    exact: true,\n    component: HirerLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["F:/Programming/niwahana/src/App/App.js"],"names":["React","Login","HirerRegister","HirerLogin","WorkerRegister","WorkerLogin","BrowserRouter","Router","Route","Provider","store","jwt_decode","setAuthToken","setCurrentUser","logoutWorker","logoutHirer","PrivateRoute","WorkerDashboard","localStorage","jwtToken","token","decoded","dispatch","currentTime","Date","now","exp","window","location","href","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SACEC,cADF,EAEEC,YAFF,EAGEC,WAHF,QAIO,wBAJP;AAKA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,eAAP,MAA4B,+BAA5B,C,CAEA;;AACA,IAAIC,YAAY,CAACC,QAAjB,EAA2B;AACzB;AACA,QAAMC,KAAK,GAAGF,YAAY,CAACC,QAA3B;AACAP,EAAAA,YAAY,CAACQ,KAAD,CAAZ,CAHyB,CAIzB;;AACA,QAAMC,OAAO,GAAGV,UAAU,CAACS,KAAD,CAA1B,CALyB,CAMzB;;AACAV,EAAAA,KAAK,CAACY,QAAN,CAAeT,cAAc,CAACQ,OAAD,CAA7B,EAPyB,CAQzB;;AACA,QAAME,WAAW,GAAGC,IAAI,CAACC,GAAL,KAAa,IAAjC,CATyB,CASc;;AACvC,MAAIJ,OAAO,CAACK,GAAR,GAAcH,WAAlB,EAA+B;AAC7B;AACAb,IAAAA,KAAK,CAACY,QAAN,CAAeR,YAAY,EAA3B,EAF6B,CAG7B;;AACAa,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACD;AACF;;AAED,SAASC,GAAT,GAAe;AACb,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEpB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,KAAK,MAArB;AAAsB,IAAA,SAAS,EAAET,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,kBAAZ;AAA+B,IAAA,KAAK,MAApC;AAAqC,IAAA,SAAS,EAAEG,cAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,iBAAZ;AAA8B,IAAA,KAAK,MAAnC;AAAoC,IAAA,SAAS,EAAEF,aAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,eAAZ;AAA4B,IAAA,KAAK,MAAjC;AAAkC,IAAA,SAAS,EAAEG,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,cAAZ;AAA2B,IAAA,KAAK,MAAhC;AAAiC,IAAA,SAAS,EAAEF,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADF,CADF;AAaD;;AAED,eAAe2B,GAAf","sourcesContent":["import React from \"react\";\nimport Login from \"../Home/Home\";\nimport HirerRegister from \"../Register/HirerRegister\";\nimport HirerLogin from \"../Login/HirerLogin\";\nimport WorkerRegister from \"../Register/WorkerRegister\";\nimport WorkerLogin from \"../Login/WorkerLogin\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"../store\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"../utills/setAuthToken\";\nimport {\n  setCurrentUser,\n  logoutWorker,\n  logoutHirer,\n} from \"../actions/authActions\";\nimport PrivateRoute from \"../private-route/PrivateRoute\";\nimport WorkerDashboard from \"../Dashboards/WorkerDashboard\";\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutWorker());\n    // Redirect to login\n    window.location.href = \"/\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Route path=\"/\" exact component={Login} />\n          <Route path=\"/worker-register\" exact component={WorkerRegister} />\n          <Route path=\"/hirer-register\" exact component={HirerRegister} />\n          <Route path=\"/worker-login\" exact component={WorkerLogin} />\n          <Route path=\"/hirer-login\" exact component={HirerLogin} />\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}