{"ast":null,"code":"var _jsxFileName = \"F:\\\\Programming\\\\niwahana\\\\src\\\\App\\\\App.js\";\nimport React from \"react\";\nimport Login from \"../Home/Home\";\nimport HirerRegister from \"../Register/HirerRegister\";\nimport HirerLogin from \"../Login/HirerLogin\";\nimport WorkerRegister from \"../Register/WorkerRegister\";\nimport WorkerLogin from \"../Login/WorkerLogin\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"../store\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"../utills/setAuthToken\";\nimport { setCurrentWorker, setCurrentHirer, logoutWorker, logoutHirer } from \"../actions/authActions\";\nimport PrivateRoute from \"../private-route/PrivateRoute\";\nimport WorkerDashboard from \"../Dashboards/WorkerDashboard\";\nimport HirerDashboard from \"../Dashboards/HirerDashboard\"; // // Check for token to keep user logged in\n// if (localStorage.jwtToken) {\n//   // Set auth token header auth\n//   const token = localStorage.jwtToken;\n//   setAuthToken(token);\n//   // Decode token and get user info and exp\n//   const decodedW = jwt_decode(token);\n//   const decodedH = jwt_decode(token);\n//   // Set user and isAuthenticated\n//   store.dispatch(setCurrentWorker(decodedW));\n//   store.dispatch(setCurrentHirer(decodedH));\n//   // Check for expired token\n//   const currentTime = Date.now() / 1000; // to get in milliseconds\n//   if (decodedW.exp < currentTime) {\n//     // Logout user\n//     store.dispatch(logoutWorker());\n//     // Redirect to login\n//     window.location.href = \"/\";\n//   }\n//   if (decodedH.exp < currentTime) {\n//     // Logout user\n//     store.dispatch(logoutHirer());\n//     // Redirect to login\n//     window.location.href = \"/\";\n//   }\n// }\n\nfunction App() {\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    component: Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/worker-register\",\n    exact: true,\n    component: WorkerRegister,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/hirer-register\",\n    exact: true,\n    component: HirerRegister,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/worker-login\",\n    exact: true,\n    component: WorkerLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/hirer-login\",\n    exact: true,\n    component: HirerLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(PrivateRoute, {\n    exact: true,\n    path: \"/worker-dashboard\",\n    component: WorkerDashboard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(PrivateRoute, {\n    exact: true,\n    path: \"/hirer-dashboard\",\n    component: HirerDashboard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["F:/Programming/niwahana/src/App/App.js"],"names":["React","Login","HirerRegister","HirerLogin","WorkerRegister","WorkerLogin","BrowserRouter","Router","Route","Switch","Provider","store","jwt_decode","setAuthToken","setCurrentWorker","setCurrentHirer","logoutWorker","logoutHirer","PrivateRoute","WorkerDashboard","HirerDashboard","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SACEC,gBADF,EAEEC,eAFF,EAGEC,YAHF,EAIEC,WAJF,QAKO,wBALP;AAMA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,cAAP,MAA2B,8BAA3B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,GAAT,GAAe;AACb,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEV,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,KAAK,MAArB;AAAsB,IAAA,SAAS,EAAEV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,kBAAZ;AAA+B,IAAA,KAAK,MAApC;AAAqC,IAAA,SAAS,EAAEG,cAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,iBAAZ;AAA8B,IAAA,KAAK,MAAnC;AAAoC,IAAA,SAAS,EAAEF,aAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,eAAZ;AAA4B,IAAA,KAAK,MAAjC;AAAkC,IAAA,SAAS,EAAEG,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,cAAZ;AAA2B,IAAA,KAAK,MAAhC;AAAiC,IAAA,SAAS,EAAEF,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,mBAFP;AAGE,IAAA,SAAS,EAAEgB,eAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,YAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,kBAFP;AAGE,IAAA,SAAS,EAAEC,cAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CANF,CADF,CADF,CADF;AAyBD;;AAED,eAAeC,GAAf","sourcesContent":["import React from \"react\";\nimport Login from \"../Home/Home\";\nimport HirerRegister from \"../Register/HirerRegister\";\nimport HirerLogin from \"../Login/HirerLogin\";\nimport WorkerRegister from \"../Register/WorkerRegister\";\nimport WorkerLogin from \"../Login/WorkerLogin\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"../store\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"../utills/setAuthToken\";\nimport {\n  setCurrentWorker,\n  setCurrentHirer,\n  logoutWorker,\n  logoutHirer,\n} from \"../actions/authActions\";\nimport PrivateRoute from \"../private-route/PrivateRoute\";\nimport WorkerDashboard from \"../Dashboards/WorkerDashboard\";\nimport HirerDashboard from \"../Dashboards/HirerDashboard\";\n\n// // Check for token to keep user logged in\n// if (localStorage.jwtToken) {\n//   // Set auth token header auth\n//   const token = localStorage.jwtToken;\n//   setAuthToken(token);\n//   // Decode token and get user info and exp\n//   const decodedW = jwt_decode(token);\n//   const decodedH = jwt_decode(token);\n//   // Set user and isAuthenticated\n//   store.dispatch(setCurrentWorker(decodedW));\n\n//   store.dispatch(setCurrentHirer(decodedH));\n//   // Check for expired token\n//   const currentTime = Date.now() / 1000; // to get in milliseconds\n//   if (decodedW.exp < currentTime) {\n//     // Logout user\n//     store.dispatch(logoutWorker());\n//     // Redirect to login\n//     window.location.href = \"/\";\n//   }\n\n//   if (decodedH.exp < currentTime) {\n//     // Logout user\n//     store.dispatch(logoutHirer());\n//     // Redirect to login\n//     window.location.href = \"/\";\n//   }\n// }\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Route path=\"/\" exact component={Login} />\n          <Route path=\"/worker-register\" exact component={WorkerRegister} />\n          <Route path=\"/hirer-register\" exact component={HirerRegister} />\n          <Route path=\"/worker-login\" exact component={WorkerLogin} />\n          <Route path=\"/hirer-login\" exact component={HirerLogin} />\n          <Switch>\n            <PrivateRoute\n              exact\n              path=\"/worker-dashboard\"\n              component={WorkerDashboard}\n            />\n            <PrivateRoute\n              exact\n              path=\"/hirer-dashboard\"\n              component={HirerDashboard}\n            />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}