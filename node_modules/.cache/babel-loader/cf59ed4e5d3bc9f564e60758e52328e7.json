{"ast":null,"code":"var _jsxFileName = \"F:\\\\Programming\\\\niwahana\\\\src\\\\Login\\\\WorkerLogin.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginWorker } from \"../actions/authActions\";\nimport classnames from \"classnames\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport \"./Login.css\";\n\nclass WorkerLogin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {},\n      modalIsOpen: false\n    };\n\n    this.toggleModal = () => {\n      this.setState({\n        modalIsOpen: !this.state.modalIsOpen\n      });\n    };\n\n    this.redirectToWorker = () => {\n      window.location = \"/worker-register\";\n    };\n\n    this.redirectToHirer = () => {\n      window.location = \"/hirer-register\";\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const workerData = {\n        phone: this.state.phone,\n        password: this.state.password\n      };\n      console.log(workerData);\n      this.props.loginWorker(workerData); //\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/worker-dashboard\"); // push user to dashboard when they login\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"login-form-inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"logo.png\",\n      style: {\n        width: \"200px\",\n        height: \"auto\"\n      },\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      style: {\n        marginBottom: \"30px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Login as a Worker\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: classnames(\"form-control shadow\", {\n        invalid: errors.phone || errors.phonenotfound\n      }),\n      type: \"text\",\n      id: \"phone\",\n      error: errors.phone,\n      placeholder: \"Mobile Number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, errors.phone, errors.phonenotfound)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: classnames(\"form-control shadow\", {\n        invalid: errors.password || errors.passwordincorrect\n      }),\n      type: \"password\",\n      id: \"password\",\n      error: errors.password,\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, errors.password, errors.passwordincorrect)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary login-button shadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Login\")), React.createElement(\"a\", {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Forgot Password?\")))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      href: \"/\",\n      className: \"btn btn-link\",\n      onClick: this.toggleModal.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Create an Account?\"))), React.createElement(Modal, {\n      isOpen: this.state.modalIsOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggleModal.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"How do you want to sign up as?\"), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.redirectToHirer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Sign as Hirer\"), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.redirectToWorker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Sign as Worker\")))));\n  }\n\n}\n\nWorkerLogin.propTypes = {\n  loginWorker: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loginWorker\n})(WorkerLogin);","map":{"version":3,"sources":["F:/Programming/niwahana/src/Login/WorkerLogin.js"],"names":["React","Component","PropTypes","connect","loginWorker","classnames","Modal","ModalHeader","ModalBody","ModalFooter","WorkerLogin","state","email","password","errors","modalIsOpen","toggleModal","setState","redirectToWorker","window","location","redirectToHirer","onChange","e","target","id","value","onSubmit","preventDefault","workerData","phone","console","log","props","componentWillReceiveProps","nextProps","auth","isAuthenticated","history","push","render","width","height","marginBottom","invalid","phonenotfound","passwordincorrect","bind","propTypes","func","isRequired","object","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,KAAT,EAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,WAAxC,QAA2D,YAA3D;AACA,OAAO,aAAP;;AAEA,MAAMC,WAAN,SAA0BT,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCU,KADkC,GAC1B;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,MAAM,EAAE,EAHF;AAINC,MAAAA,WAAW,EAAE;AAJP,KAD0B;;AAAA,SAmBlCC,WAnBkC,GAmBpB,MAAM;AAClB,WAAKC,QAAL,CAAc;AACZF,QAAAA,WAAW,EAAE,CAAC,KAAKJ,KAAL,CAAWI;AADb,OAAd;AAGD,KAvBiC;;AAAA,SAyBlCG,gBAzBkC,GAyBf,MAAM;AACvBC,MAAAA,MAAM,CAACC,QAAP,GAAkB,kBAAlB;AACD,KA3BiC;;AAAA,SA4BlCC,eA5BkC,GA4BhB,MAAM;AACtBF,MAAAA,MAAM,CAACC,QAAP,GAAkB,iBAAlB;AACD,KA9BiC;;AAAA,SAgClCE,QAhCkC,GAgCtBC,CAAD,IAAO;AAChB,WAAKN,QAAL,CAAc;AAAE,SAACM,CAAC,CAACC,MAAF,CAASC,EAAV,GAAeF,CAAC,CAACC,MAAF,CAASE;AAA1B,OAAd;AACD,KAlCiC;;AAAA,SAoClCC,QApCkC,GAoCtBJ,CAAD,IAAO;AAChBA,MAAAA,CAAC,CAACK,cAAF;AACA,YAAMC,UAAU,GAAG;AACjBC,QAAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWmB,KADD;AAEjBjB,QAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE;AAFJ,OAAnB;AAIAkB,MAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AAEA,WAAKI,KAAL,CAAW7B,WAAX,CAAuByB,UAAvB,EARgB,CAQoB;AACrC,KA7CiC;AAAA;;AAQlCK,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAIA,SAAS,CAACC,IAAV,CAAeC,eAAnB,EAAoC;AAClC,WAAKJ,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAwB,mBAAxB,EADkC,CACY;AAC/C;;AACD,QAAIJ,SAAS,CAACrB,MAAd,EAAsB;AACpB,WAAKG,QAAL,CAAc;AACZH,QAAAA,MAAM,EAAEqB,SAAS,CAACrB;AADN,OAAd;AAGD;AACF;;AA8BD0B,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE1B,MAAAA;AAAF,QAAa,KAAKH,KAAxB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,GAAG,EAAC,UADN;AAEE,MAAA,KAAK,EAAE;AAAE8B,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,MAAM,EAAE;AAA1B,OAFT;AAGE,MAAA,GAAG,EAAC,EAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BANF,EAOE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAEtC,UAAU,CAAC,qBAAD,EAAwB;AAC3CuC,QAAAA,OAAO,EAAE9B,MAAM,CAACgB,KAAP,IAAgBhB,MAAM,CAAC+B;AADW,OAAxB,CADvB;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,EAAE,EAAC,OALL;AAME,MAAA,KAAK,EAAE/B,MAAM,CAACgB,KANhB;AAOE,MAAA,WAAW,EAAC,eAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAUE;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGhB,MAAM,CAACgB,KADV,EAEGhB,MAAM,CAAC+B,aAFV,CAVF,CAPF,EAsBE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAExC,UAAU,CAAC,qBAAD,EAAwB;AAC3CuC,QAAAA,OAAO,EAAE9B,MAAM,CAACD,QAAP,IAAmBC,MAAM,CAACgC;AADQ,OAAxB,CADvB;AAIE,MAAA,IAAI,EAAC,UAJP;AAKE,MAAA,EAAE,EAAC,UALL;AAME,MAAA,KAAK,EAAEhC,MAAM,CAACD,QANhB;AAOE,MAAA,WAAW,EAAC,UAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAUE;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,MAAM,CAACD,QADV,EAEGC,MAAM,CAACgC,iBAFV,CAVF,CAtBF,EAqCE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,qCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CArCF,EA0CE;AAAG,MAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BA1CF,CADF,CADF,CADF,EAiDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,GADP;AAEE,MAAA,SAAS,EAAC,cAFZ;AAGE,MAAA,OAAO,EAAE,KAAK9B,WAAL,CAAiB+B,IAAjB,CAAsB,IAAtB,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALF,CADF,CAjDF,EA0DE,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE,KAAKpC,KAAL,CAAWI,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAE,KAAKC,WAAL,CAAiB+B,IAAjB,CAAsB,IAAtB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAJF,EAKE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,OAAO,EAAE,KAAK1B,eAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAOE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,OAAO,EAAE,KAAKH,gBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPF,CALF,CA1DF,CADF,CADF;AAmFD;;AApIiC;;AAuIpCR,WAAW,CAACsC,SAAZ,GAAwB;AACtB5C,EAAAA,WAAW,EAAEF,SAAS,CAAC+C,IAAV,CAAeC,UADN;AAEtBd,EAAAA,IAAI,EAAElC,SAAS,CAACiD,MAAV,CAAiBD,UAFD;AAGtBpC,EAAAA,MAAM,EAAEZ,SAAS,CAACiD,MAAV,CAAiBD;AAHH,CAAxB;;AAKA,MAAME,eAAe,GAAIzC,KAAD,KAAY;AAClCyB,EAAAA,IAAI,EAAEzB,KAAK,CAACyB,IADsB;AAElCtB,EAAAA,MAAM,EAAEH,KAAK,CAACG;AAFoB,CAAZ,CAAxB;;AAIA,eAAeX,OAAO,CAACiD,eAAD,EAAkB;AAAEhD,EAAAA;AAAF,CAAlB,CAAP,CAA0CM,WAA1C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginWorker } from \"../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport \"./Login.css\";\r\n\r\nclass WorkerLogin extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    errors: {},\r\n    modalIsOpen: false,\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/worker-dashboard\"); // push user to dashboard when they login\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      modalIsOpen: !this.state.modalIsOpen,\r\n    });\r\n  };\r\n\r\n  redirectToWorker = () => {\r\n    window.location = \"/worker-register\";\r\n  };\r\n  redirectToHirer = () => {\r\n    window.location = \"/hirer-register\";\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const workerData = {\r\n      phone: this.state.phone,\r\n      password: this.state.password,\r\n    };\r\n    console.log(workerData);\r\n\r\n    this.props.loginWorker(workerData); //\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"login-form\">\r\n            <div>\r\n              <form className=\"login-form-inner\">\r\n                <img\r\n                  src=\"logo.png\"\r\n                  style={{ width: \"200px\", height: \"auto\" }}\r\n                  alt=\"\"\r\n                />\r\n                <h1 style={{ marginBottom: \"30px\" }}>Login as a Worker</h1>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    className={classnames(\"form-control shadow\", {\r\n                      invalid: errors.phone || errors.phonenotfound,\r\n                    })}\r\n                    type=\"text\"\r\n                    id=\"phone\"\r\n                    error={errors.phone}\r\n                    placeholder=\"Mobile Number\"\r\n                  />\r\n                  <span className=\"red-text\">\r\n                    {errors.phone}\r\n                    {errors.phonenotfound}\r\n                  </span>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    className={classnames(\"form-control shadow\", {\r\n                      invalid: errors.password || errors.passwordincorrect,\r\n                    })}\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    error={errors.password}\r\n                    placeholder=\"Password\"\r\n                  />\r\n                  <span className=\"red-text\">\r\n                    {errors.password}\r\n                    {errors.passwordincorrect}\r\n                  </span>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary login-button shadow\">\r\n                    Login\r\n                  </button>\r\n                </div>\r\n                <a href=\"/\">Forgot Password?</a>\r\n              </form>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <button\r\n              href=\"/\"\r\n              className=\"btn btn-link\"\r\n              onClick={this.toggleModal.bind(this)}\r\n            >\r\n              <h3>Create an Account?</h3>\r\n            </button>\r\n          </div>\r\n          <Modal isOpen={this.state.modalIsOpen}>\r\n            <ModalHeader toggle={this.toggleModal.bind(this)}>\r\n              Sign Up\r\n            </ModalHeader>\r\n            <ModalBody>How do you want to sign up as?</ModalBody>\r\n            <ModalFooter>\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={this.redirectToHirer}\r\n              >\r\n                Sign as Hirer\r\n              </button>\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={this.redirectToWorker}\r\n              >\r\n                Sign as Worker\r\n              </button>\r\n            </ModalFooter>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nWorkerLogin.propTypes = {\r\n  loginWorker: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n});\r\nexport default connect(mapStateToProps, { loginWorker })(WorkerLogin);\r\n"]},"metadata":{},"sourceType":"module"}